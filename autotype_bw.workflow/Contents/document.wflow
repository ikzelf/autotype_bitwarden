<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>520</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string># activated with a citrix viewer window as front window using a keyboard shortcut# finds the name of that window# and searches for a group in the bitwarden vault that matches that window name# the idea is that this prevents having to hard code group names in the script## the list of found items is shown# the chosen password is shown in an editable dialog# the string from the editable dialog is written to the front most window, without an enter## depends on bw that can/should be installed using brew install bitwarden-cli jq# https://github.com/bitwarden/clients/tree/master/apps/cli#readme# first run bw login your_bitwarden_account from the terminal and export the export BW_SESSION using the key presented.# (C) Ronald Rood - 2023# uses ~/.bash_profile to set PATHon FileExists(theFile) -- (String) as Boolean	tell application "System Events"		if exists file theFile then			return true		else			return false		end if	end tellend FileExiststell application "System Events"	set frontAppProcess to first application process whose frontmost is true	set frontAppName to name of frontAppProcess	# display dialog frontAppName	# get title of top citrix viewer window	tell process frontAppName		tell (1st window whose value of attribute "AXMain" is true)			set windowTitle to value of attribute "AXTitle"		end tell	end tell	# display dialog windowTitle		set connected_name to (do shell script ". ~/.bash_profile;bw status|jq -r '.| [ .userEmail, .status ]|@tsv'")	if (connected_name does not end with "unlocked") then		display dialog connected_name &amp; "
		first run: bw login your@email
		and echo 'export BW_SESSION=xxxxxxxxxx &gt;~/.config/.bw_session (as output from bw login)
		and have ~/.bash_profile source ~/.config/.bw_session	from the terminal" default button ("OK")	else		try						set debugaction to "getGroupID"			set GroupID to (do shell script ". ~/.bash_profile;bw list folders --search '" &amp; windowTitle &amp; "' |jq -r  '.[0].id'")						set debugaction to "listsgroep " &amp; GroupID			# get the items from the group 			set lijstje to (do shell script ". ~/.bash_profile;bw list items --folderid '" &amp; GroupID &amp; "'  |jq -r  '.[] |[ .name, .id] |@tsv'")						display dialog connected_name &amp; "		" &amp; windowTitle &amp; "				" &amp; lijstje default button ("OK")						set keuzelijstje to paragraphs of lijstje			set debugaction to "choose pwd item"			try				set de_keuze to choose from list keuzelijstje with prompt "Select pwd item:"			on error				return			end try			# display dialog (de_keuze)			set debugaction to "get ID uit " &amp; de_keuze			set gekozen_ID to do shell script "awk '{print substr($NF, 1, length($NF)-1)}'&lt;&lt;&lt;" &amp; quoted form of (item 1 of de_keuze)						set debugaction to "get pwd van ID: " &amp; gekozen_ID			set pwd to do shell script ". ~/.bash_profile;bw get item  " &amp; gekozen_ID &amp; "|jq -r .login.password"						# eventually preview and edit before typing instead of directly set texttosay to pwd:			# display dialog "pwd to type:" default answer pwd			# set texttosay to the text returned of the result			set texttosay to pwd						activate application frontAppName # "Citrix Viewer"			try				keystroke texttosay			on error errMsg number errorNumber				display dialog errMsg &amp; " :  " &amp; errorNumber as text			end try					on error errMsg number errorNumber			display dialog debugaction &amp; " : " &amp; errMsg		end try	end if	end tell</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>CD8E8D33-4631-4C9C-93C3-AE3A586EEDA0</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>0639C23C-3301-4B7A-869E-89511F9A8ACD</string>
				<key>UUID</key>
				<string>D64E2862-4FAB-4351-91E9-CD87A3253177</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>462.500000:626.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>D65B17DE-5E60-48D4-A46B-B1F9EF4F057E</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.AppleScript</string>
			<key>name</key>
			<string>AppleScript</string>
			<key>value</key>
			<string>"Text"</string>
		</dict>
		<dict>
			<key>UUID</key>
			<string>2280E7BF-15DD-4418-97FD-BE0750044CEE</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.ScriptsFolder</string>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<false/>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<false/>
		<key>systemImageName</key>
		<string>NSActionTemplate</string>
		<key>useAutomaticInputType</key>
		<false/>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
